{"name": "test_1[-post-Y-手机号为空-http://192.168.31.166:799/ecshop/user.php-{\n    'username': memberid,\n    'email': memberid+'@qq.com',\n    'password': '111111',\n    'confirm_password': '111111',\n    'extend_field2': '',\n    'extend_field3': '5252525',\n    'extend_field4': '',\n    'extend_field5': '',\n    'sel_question': 'friend_birthday',\n    'passwd_answer': '1',\n    'captcha': '',\n    'sms_code':'',\n    'agreement': '1',\n    'act': 'act_register',\n    'Submit':'',\n    }---手机号不能为空]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '手机号不能为空' in '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...t=\"_blank\"></a></div>\\r\\n    </div>\\r\\n  <div class=\"clear10\"></div>\\r\\n</div>\\r\\n \\r\\n \\r\\n\\r\\n</body>\\r\\n</html>\\r\\n'\n +  where '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...t=\"_blank\"></a></div>\\r\\n    </div>\\r\\n  <div class=\"clear10\"></div>\\r\\n</div>\\r\\n \\r\\n \\r\\n\\r\\n</body>\\r\\n</html>\\r\\n' = <Response [200]>.text", "trace": "title1 = '', type = 'post', tobeornottobe = 'Y', content = '手机号为空', url = 'http://192.168.31.166:799/ecshop/user.php'\ndata = \"{\\n    'username': memberid,\\n    'email': memberid+'@qq.com',\\n    'password': '111111',\\n    'confirm_password': '1...',\\n    'captcha': '',\\n    'sms_code':'',\\n    'agreement': '1',\\n    'act': 'act_register',\\n    'Submit':'',\\n    }\"\nother1 = '', other2 = '', expected = '手机号不能为空'\n\n    @pytest.mark.parametrize('title1,type,tobeornottobe,content,url,data,other1,other2,expected',case)\n    def test_1(title1,type,tobeornottobe,content,url,data,other1,other2,expected):\n        datab = eval(data)\n    \n        for key, value in datab.items():#遍历请求参数中是否需要随机字符串\n            if '--random--' in value:\n                data2 = re.sub('--random--', memberid, value)#将value中的'--random--'的字符串替换成随机字符\n                datab[key] = data2#将变更的value还给所属的key\n    \n        global data1  # 声明一个全局变量，存放关联接口用到的值\n        if other2 != '':#判断当下接口的请求参数是否需要上个接口的返回参数\n            datab[f'{other2}']=data1[0]#将环境变量中的值付给当下需要关联参数的key\n        #判断是post接口还是get接口\n        if type == 'post':\n            r = requests.post(data=datab,url=url)\n        elif type == 'get':\n            r = requests.get(params=datab,url=url)\n        affirm = expected #从Excel中获取断言值\n>       assert affirm in r.text #断言\nE       assert '手机号不能为空' in '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...t=\"_blank\"></a></div>\\r\\n    </div>\\r\\n  <div class=\"clear10\"></div>\\r\\n</div>\\r\\n \\r\\n \\r\\n\\r\\n</body>\\r\\n</html>\\r\\n'\nE        +  where '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...t=\"_blank\"></a></div>\\r\\n    </div>\\r\\n  <div class=\"clear10\"></div>\\r\\n</div>\\r\\n \\r\\n \\r\\n\\r\\n</body>\\r\\n</html>\\r\\n' = <Response [200]>.text\n\ntest_fore.py:47: AssertionError"}, "parameters": [{"name": "title1", "value": "''"}, {"name": "type", "value": "'post'"}, {"name": "tobeornottobe", "value": "'Y'"}, {"name": "content", "value": "'手机号为空'"}, {"name": "url", "value": "'http://192.168.31.166:799/ecshop/user.php'"}, {"name": "data", "value": "'{\n    'username': memberid,\n    'email': memberid+'@qq.com',\n    'password': '111111',\n    'confirm_password': '111111',\n    'extend_field2': '',\n    'extend_field3': '5252525',\n    'extend_field4': '',\n    'extend_field5': '',\n    'sel_question': 'friend_birthday',\n    'passwd_answer': '1',\n    'captcha': '',\n    'sms_code':'',\n    'agreement': '1',\n    'act': 'act_register',\n    'Submit':'',\n    }'"}, {"name": "other1", "value": "''"}, {"name": "other2", "value": "''"}, {"name": "expected", "value": "'手机号不能为空'"}], "start": 1586281627343, "stop": 1586281629593, "uuid": "78095e4c-f018-4735-a1f2-f5942739b74b", "historyId": "a24035f0110ed5ce023ba11038d569f5", "testCaseId": "d2d9b3c37ba81e33f7c8be651a32258a", "fullName": "test_case.test_fore#test_1", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_fore"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "43275-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_fore"}]}